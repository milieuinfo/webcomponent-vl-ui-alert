import{VlElement,define}from"/node_modules/vl-ui-core/vl-core.js";import"/node_modules/vl-ui-icon/vl-icon.js";export class VlAlert extends(VlElement(HTMLElement)){constructor(){super('\n            <style>\n                @import "./style.css";\n            </style>\n            <div id="alert" class="vl-alert" role="alert">\n                <div id="content" class="vl-alert__content">\n                    <p id="title" class="vl-alert__title"></p>\n                    <div id="message" class="vl-alert__message">\n                        <slot></slot>\n                    </div>\n                    <div id="actions" class="vl-alert__actions">\n                        <slot name="actions"></slot>\n                    </div>\n                </div>\n            </div>\n        ')}connectedCallback(){this._actionsSlotElement.addEventListener("slotchange",e=>{this._actionsSlotElement&&this._actionsSlotElement.assignedNodes().forEach(e=>{e instanceof HTMLButtonElement&&e.classList.add("vl-button--narrow")}),this.__processActionsElementVisibility()}),this.__processActionsElementVisibility()}static get _observedAttributes(){return["icon","title","closable","type","size"]}get _classPrefix(){return"vl-alert--"}get _titelElement(){return this._element.querySelector(".vl-alert__title")}get _iconElement(){return this._element.querySelector(".vl-alert__icon")}get _contentElement(){return this._element.querySelector(".vl-alert__content")}get _closeButtonElement(){return this._element.querySelector(".vl-alert__close")}get _actionsElement(){return this._element.querySelector(".vl-alert__actions")}get _actionsSlotElement(){return this._element.querySelector("slot[name='actions']")}disableClosable(){this._closeButtonElement&&this._closeButtonElement.removeEventListener("click",this.__removeAlert)}_getIconTemplate(e){return this._template(`\n            <div class="vl-alert__icon">\n                <span is="vl-icon" icon="${e}"></span>\n            </div>\n        `)}_getCloseButtonTemplate(){return this._template('\n            <button id="close" class="vl-alert__close" type="button">\n                <i class="vl-vi vl-vi-cross" aria-hidden="true"></i>\n                <span class="vl-u-visually-hidden">Melding sluiten</span>\n            </button>\n        ')}_getActionsTemplate(){return this._template('\n            <div class="vl-alert__actions"></div>\n        ')}_iconChangedCallback(e,t){this._iconElement&&this._iconElement.remove(),null!=t&&this._element.insertBefore(this._getIconTemplate(t),this._element.firstChild)}_titleChangedCallback(e,t){this._titelElement.textContent=t}_closableChangedCallback(e,t){if(this._closeButtonElement&&this._closeButtonElement.remove(),null!=t){const e=this._getCloseButtonTemplate();e.querySelector("button").addEventListener("click",this.__removeAlert),this._element.appendChild(e)}}_typeChangedCallback(e,t){["success","warning","error","cta"].indexOf(t)>=0?this._changeClass(this._element,e,t):this._element.classList.remove(this._classPrefix+e)}_sizeChangedCallback(e,t){["large","small"].indexOf(t)>=0?this._changeClass(this._element,e,t):this._element.classList.remove(this._classPrefix+e)}__processActionsElementVisibility(){this._actionsSlotElement&&0==this._actionsSlotElement.assignedElements().length?this._actionsElement.style.display="none":this._actionsElement.style.display="block"}__removeAlert(){this.getRootNode().host.remove()}}define("vl-alert",VlAlert);
